/*
 * Copyright (c) 2021, The Imaging Source Europe GmbH.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __TIS_IMX415_MODE_TBLS_H__
#define __TIS_IMX415_MODE_TBLS_H__

#include <media/camera_common.h>


#define TIS_IMX415_TABLE_WAIT_MS	0xff00
#define TIS_IMX415_TABLE_END	    0xff01
#define TIS_IMX415_MAX_RETRIES	    3
#define TIS_IMX415_WAIT_MS_STOP	    1
#define TIS_IMX415_WAIT_MS_START	24
#define TIS_IMX415_WAIT_MS_STREAM	255

// INCK 37.125 MHz => 891 Mbps/lane
static struct reg_8 tis_imx415_37MHz_891Mbps[] =
{
    { 0x3008, 0x7F },   // BCWAIT_TIME
    { 0x3009, 0x00 },
    { 0x300A, 0x5B },   // CPWAIT_TIME
    { 0x300B, 0xA0 },
    { 0x3033, 0x05 },   // SYS_MODE
    { 0x3115, 0x00 },   // INCKSEL1
    { 0x3116, 0x24 },   // INCKSEL2
    { 0x3118, 0xC0 },   // INCLSEL3
    { 0x3119, 0x00 },
    { 0x311A, 0xE0 },   // INCKSEL4
    { 0x311B, 0x00 },
    { 0x311E, 0x24 },   // INCKSEL5
    { 0x4004, 0x48 },   // TXCLKESC_FREQ
    { 0x4005, 0x09 },
    { 0x400C, 0x00 },   // INCKSEL6
    { 0x4074, 0x01 },   // INCKSEL7

    { 0x4018, 0x7F },   // TCLKPOST
    { 0x4019, 0x00 },
    { 0x401A, 0x37 },   // TCLKPREPARE
    { 0x401B, 0x00 },
    { 0x401C, 0x37 },   // TCLKTRAIL
    { 0x401D, 0x00 },
    { 0x401E, 0xF7 },   // TCLKZERO
    { 0x401F, 0x00 },
    { 0x4020, 0x3F },   // THSPREPARE
    { 0x4021, 0x00 },
    { 0x4022, 0x6F },   // THSZERO
    { 0x4023, 0x00 },
    { 0x4024, 0x3F },   // THSTRAIL
    { 0x4025, 0x00 },
    { 0x4026, 0x5F },   // THSEXIT
    { 0x4027, 0x00 },
    { 0x4028, 0x2F },   // TLPX
    { 0x4029, 0x00 },

    { TIS_IMX415_TABLE_END }
};


// INCK 37.125 MHz => 1485 Mbps/lane
static struct reg_8 tis_imx415_37MHz_1485Mbps[] =
{
    { 0x3008, 0x7F },   // BCWAIT_TIME
    { 0x3009, 0x00 },
    { 0x300A, 0x5B },   // CPWAIT_TIME
    { 0x300B, 0xA0 },
    { 0x3033, 0x08 },   // SYS_MODE
    { 0x3115, 0x00 },   // INCKSEL1
    { 0x3116, 0x24 },   // INCKSEL2
    { 0x3118, 0xA0 },   // INCLSEL3
    { 0x3119, 0x00 },
    { 0x311A, 0xE0 },   // INCKSEL4
    { 0x311B, 0x00 },
    { 0x311E, 0x24 },   // INCKSEL5
    { 0x4004, 0x48 },   // TXCLKESC_FREQ
    { 0x4005, 0x09 },
    { 0x400C, 0x01 },   // INCKSEL6
    { 0x4074, 0x00 },   // INCKSEL7

    { 0x4018, 0xA7 },   // TCLKPOST
    { 0x4019, 0x00 },
    { 0x401A, 0x57 },   // TCLKPREPARE
    { 0x401B, 0x00 },
    { 0x401C, 0x5F },   // TCLKTRAIL
    { 0x401D, 0x00 },
    { 0x401E, 0x97 },   // TCLKZERO
    { 0x401F, 0x01 },
    { 0x4020, 0x5F },   // THSPREPARE
    { 0x4021, 0x00 },
    { 0x4022, 0xAF },   // THSZERO
    { 0x4023, 0x00 },
    { 0x4024, 0x5F },   // THSTRAIL
    { 0x4025, 0x00 },
    { 0x4026, 0x9F },   // THSEXIT
    { 0x4027, 0x00 },
    { 0x4028, 0x5F },   // TLPX
    { 0x4029, 0x00 },

    { TIS_IMX415_TABLE_END }
};

// INCK 37.125 MHz => 2376 Mbps/lane
static struct reg_8 tis_imx415_37MHz_2376Mbps[] =
{
    { 0x3008, 0x7F },   // BCWAIT_TIME
    { 0x3009, 0x00 },
    { 0x300A, 0x5B },   // CPWAIT_TIME
    { 0x300B, 0xA0 },
    { 0x3033, 0x00 },   // SYS_MODE
    { 0x3115, 0x00 },   // INCKSEL1
    { 0x3116, 0x24 },   // INCKSEL2
    { 0x3118, 0x00 },   // INCLSEL3
    { 0x3119, 0x01 },
    { 0x311A, 0xE0 },   // INCKSEL4
    { 0x311B, 0x00 },
    { 0x311E, 0x24 },   // INCKSEL5
    { 0x4004, 0x48 },   // TXCLKESC_FREQ
    { 0x4005, 0x09 },
    { 0x400C, 0x01 },   // INCKSEL6
    { 0x4074, 0x00 },   // INCKSEL7

    { 0x4018, 0xE7 },   // TCLKPOST
    { 0x4019, 0x00 },
    { 0x401A, 0x8F },   // TCLKPREPARE
    { 0x401B, 0x00 },
    { 0x401C, 0x8F },   // TCLKTRAIL
    { 0x401D, 0x00 },
    { 0x401E, 0x7F },   // TCLKZERO
    { 0x401F, 0x02 },
    { 0x4020, 0x97 },   // THSPREPARE
    { 0x4021, 0x00 },
    { 0x4022, 0x0F },   // THSZERO
    { 0x4023, 0x01 },
    { 0x4024, 0x97 },   // THSTRAIL
    { 0x4025, 0x00 },
    { 0x4026, 0xF7 },   // THSEXIT
    { 0x4027, 0x00 },
    { 0x4028, 0x7F },   // TLPX
    { 0x4029, 0x00 },

    { TIS_IMX415_TABLE_END }
};

static struct reg_8 tis_imx415_all_pixel_12bit_4lane[] =
{
    { 0x301C, 0x04 },   // WINMODE
    { 0x3022, 0x00 },   // ADDMODE
    { 0x3024, 0xCA },   // VMAX
    { 0x3025, 0x08 },
    { 0x3026, 0x00 },
    { 0x3028, 0x4C },   // HMAX
    { 0x3029, 0x04 },
    { 0x3030, 0x00 },   // HREVERSE/VREVERSE
    { 0x3031, 0x01 },   // ADBIT
    { 0x3032, 0x01 },   // MDBIT

    { 0x32D4, 0x21 },
    { 0x32EC, 0xA1 },

    { 0x3452, 0x7F },
    { 0x3453, 0x03 },

    { 0x358A, 0x04 },
    { 0x35A1, 0x02 },

    { 0x36BC, 0x0C },
    { 0x36CC, 0x53 },
    { 0x36CD, 0x00 },
    { 0x36CE, 0x3C },
    { 0x36D0, 0x8C },
    { 0x36D1, 0x00 },
    { 0x36D2, 0x71 },
    { 0x36D4, 0x3C },
    { 0x36D6, 0x53 },
    { 0x36D7, 0x00 },
    { 0x36D8, 0x71 },
    { 0x36DA, 0x8C },
    { 0x36DB, 0x00 },

    { 0x3701, 0x03 },   // ADBIT1
    { 0x3724, 0x02 },
    { 0x3726, 0x02 },
    { 0x3732, 0x02 },
    { 0x3734, 0x03 },
    { 0x3736, 0x03 },
    { 0x3742, 0x03 },

    { 0x3862, 0xE0 },
    { 0x38CC, 0x30 },
    { 0x38CD, 0x2F },

    { 0x395C, 0x0C },

    { 0x3A42, 0xD1 },
    { 0x3A4C, 0x77 },
    { 0x3AE0, 0x02 },
    { 0x3AEC, 0x0C },

    { 0x3B00, 0x2E },
    { 0x3B06, 0x29 },
    { 0x3B98, 0x25 },
    { 0x3B99, 0x21 },
    { 0x3B9B, 0x13 },
    { 0x3B9C, 0x13 },
    { 0x3B9D, 0x13 },
    { 0x3B9E, 0x13 },
    { 0x3BA1, 0x00 },
    { 0x3BA2, 0x06 },
    { 0x3BA3, 0x0B },
    { 0x3BA4, 0x10 },
    { 0x3BA5, 0x14 },
    { 0x3BA6, 0x18 },
    { 0x3BA7, 0x1A },
    { 0x3BA8, 0x1A },
    { 0x3BA9, 0x1A },
    { 0x3BAC, 0xED },
    { 0x3BAD, 0x01 },
    { 0x3BAE, 0xF6 },
    { 0x3BAF, 0x02 },
    { 0x3BB0, 0xA2 },
    { 0x3BB1, 0x03 },
    { 0x3BB2, 0xE0 },
    { 0x3BB3, 0x03 },
    { 0x3BB4, 0xE0 },
    { 0x3BB5, 0x03 },
    { 0x3BB6, 0xE0 },
    { 0x3BB7, 0x03 },
    { 0x3BB8, 0xE0 },
    { 0x3BBA, 0xE0 },
    { 0x3BBC, 0xDA },
    { 0x3BBE, 0x88 },
    { 0x3BC0, 0x44 },
    { 0x3BC2, 0x7B },
    { 0x3BC4, 0xA2 },
    { 0x3BC8, 0xBD },
    { 0x3BCA, 0xBD },

    { 0x4001, 0x03 },   // LANEMODE

	{ TIS_IMX415_TABLE_END }
};

static const struct reg_8 tis_imx415_start[] = {
	{ 0x3000, 0x00 },   // STANDBY
	{ TIS_IMX415_TABLE_WAIT_MS, TIS_IMX415_WAIT_MS_START},
    { 0x3002, 0x00 },   // XMSTA
    { TIS_IMX415_TABLE_WAIT_MS, TIS_IMX415_WAIT_MS_STREAM},

	{ TIS_IMX415_TABLE_END }
};

static const struct reg_8 tis_imx415_stop[] = {
    { 0x3002, 0x01 },   // XMSTA
	{ 0x3000, 0x01 },   // STANDBY

	{ TIS_IMX415_TABLE_END }
};


#endif // __TIS_IMX415_MODE_TBLS_H__
