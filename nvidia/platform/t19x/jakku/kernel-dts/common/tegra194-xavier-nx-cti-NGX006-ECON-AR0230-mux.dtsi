/* Econ device tree for AR0230 support */
#include "dt-bindings/clock/tegra194-clock.h"
#define CAM0_PWDN	TEGRA194_MAIN_GPIO(P, 4)

#define CAM_LANES 4
#define CAM_LANES_STRING "2"

/* Enable Six overlays in Jetson Xavier NX */
&head0 {
	win-mask = <0x3f>;
};

/ {

	/* set camera gpio direction to output */
	gpio@2200000 {
		camera-control-output-low {
		 	gpio-hog;
		 	output-low;
		 	gpios = <CAM0_PWDN 0>;
			label = "cam0-pwdn";
		};
	};

	/* all cameras are disabled by default */
	host1x {
		vi@15c10000 {
			num-channels = <4>;
			status = "okay";
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					status = "okay";
					ecam_vi_in0: endpoint {
						 status = "okay";
						 vc-id = <1>;
						 port-index = <2>;
						 bus-width = <CAM_LANES>;
						 remote-endpoint = <&ecam_csi_out0>;
					 };
				};
				port@1 {
					reg = <1>;
					status = "okay";	
					ecam_vi_in1: endpoint {
						 status = "okay";	
						 vc-id = <0>;
						 port-index = <2>;
						 bus-width = <CAM_LANES>;
						 remote-endpoint = <&ecam_csi_out1>;
					 };
				};
				port@2 {
					reg = <2>;
					status = "okay";
					ecam_vi_in2: endpoint {
						 status = "okay";	
						 vc-id = <1>;
						 port-index = <0>;
						 bus-width = <CAM_LANES>;
						 remote-endpoint = <&ecam_csi_out2>;
					 };
				};
				port@3 {
					reg = <3>;
					status = "okay";	
					ecam_vi_in3: endpoint {
						 status = "okay";	
						 vc-id = <0>;
						 port-index = <0>;
						 bus-width = <CAM_LANES>;
						 remote-endpoint = <&ecam_csi_out3>;
					 };
				};
			};
		};

		nvcsi@15a00000 {
			num-channels = <4>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";	
			channel@0 {
				reg = <0>;
				status = "okay";	
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";	
						ecam_csi_in0: endpoint@0 {
							  status = "okay";	
							  port-index = <2>;
							  bus-width = <CAM_LANES>;
							  remote-endpoint = <&ecam_ar0230_out0>;
						  };
					};
					port@1 {
						reg = <1>;
						status = "okay";	
						ecam_csi_out0: endpoint@1 {
						   status = "okay";	
						   remote-endpoint = <&ecam_vi_in0>;
					   };
					};
				};
			};
			channel@1 {
				reg = <1>;
				status = "okay";	
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";	
						ecam_csi_in1: endpoint@2 {
							  status = "okay";	
							  port-index = <2>;
							  bus-width = <CAM_LANES>;
							  remote-endpoint = <&ecam_ar0230_out1>;
						};
					};
					port@1 {
						reg = <1>;
						status = "okay";	
						ecam_csi_out1: endpoint@3 {
							   status = "okay";	
							   remote-endpoint = <&ecam_vi_in1>;
					   };
					};
				};
			};
			channel@2 {
				reg = <2>;
				status = "okay";	
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";	
						ecam_csi_in2: endpoint@4 {
							  status = "okay";	
							  port-index = <0>;
							  bus-width = <CAM_LANES>;
							  remote-endpoint = <&ecam_ar0230_out2>;
						  };
					};
					port@1 {
						reg = <1>;
						status = "okay";	
						ecam_csi_out2: endpoint@5 {
						   status = "okay";	
						   remote-endpoint = <&ecam_vi_in2>;
					   };
					};
				};
			};
			channel@3 {
				reg = <3>;
				status = "okay";	
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";	
						ecam_csi_in3: endpoint@6 {
							  status = "okay";	
							  port-index = <0>;
							  bus-width = <CAM_LANES>;
							  remote-endpoint = <&ecam_ar0230_out3>;
						};
					};
					port@1 {
						reg = <1>;
						status = "okay";	
						ecam_csi_out3: endpoint@7 {
							   status = "okay";	
							   remote-endpoint = <&ecam_vi_in3>;
					   };
					};
				};
			};
		};
	};
	
	
	
	i2c@31e0000 {
	  	status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
		gpio@74{    //Camera GPIO
			clock-frequency = <100000>;
			tca9539_74: tca9539@74 {
			compatible = "ti,tca9539";
			gpio-controller;
			#gpio-cells = <2>;
			reg = <0x74>;
			vcc-supply = <&battery_reg>;
		 	status = "okay";
			tca9539_74_outlow {
		 		/*
				 * GPIO-0  : RST_CAMA
		 		 * GPIO-1  : BOOT_CAMA
		 		 * GPIO-2  : RST_CAMB
		 		 * GPIO-3  : BOOT_CAMB
		 		 * GPIO-4  : RST_CAMC
		 		 * GPIO-5  : BOOT_CAMC
		 		 * GPIO-6  : RST_CAMD
		 		 * GPIO-7  : BOOT_CAMD
				 */
		 		gpio-hog;
		 		gpios = <0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0>;
		 		output-low;
		 		label = "tca9539_74_outlow_0",
		 				"tca9539_74_outlow_1",
		 				"tca9539_74_outlow_2",
		 				"tca9539_74_outlow_3",
		 				"tca9539_74_outlow_4",
		 				"tca9539_74_outlow_5",
		 				"tca9539_74_outlow_6",
		 				"tca9539_74_outlow_7";
		 	};
			tca9539_74_outhigh {
		 		status= "disabled";
			};
			tca9539_74_input {
		 		status = "disabled";
		 	};
		 };
	    };
	};

	i2c@3180000 {
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
		tca9544@70 {
            		compatible = "nxp,pca9544";
            		reg = <0x70>;
            		#address-cells = <1>;
            		#size-cells = <0>;
			vcc-supply = <&battery_reg>;
			skip_mux_detect;
            		force_bus_start = <0x1e>;
			i2c@0 {
	            		reg = <0>;
    	   	    		i2c-mux,deselect-on-exit;
        	   	 	#address-cells = <1>;
             			#size-cells = <0>;
	            		status = "okay";
				ar0230_a@43 {
					status = "okay";
					compatible = "nvidia,ar0230";
					reg = <0x43>;
					sensor_model ="ar0230";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					boot-gpios = <&tca9539_74 1 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca9539_74 0 GPIO_ACTIVE_HIGH>; 
					vana-supply = <&battery_reg>;
					vif-supply = <&battery_reg>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;
					sio-port = "A";
					deserializer-address = <0x48>;
					serializer-address_1 = <0x40>;
					serializer-address_2 = <0x41>;	
					/*PWM CHIP 0 with default period for 30Hz*/
					#pwm-cells = <1>;
					pwms = <&tegra_pwm8 0 33333333>;
#define TEGRA_SINTERFACE "serial_a"
#include "tegra194-xavier-nx-cti-nilecam20_cunx_mode.dtsi"
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0230_out0: endpoint {
						 		vc-id = <1>;
								port-index = <2>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in0>;
							};
						};
					};
				};
               			ar0230_b@44 {
                        		status = "okay";
                        		compatible = "nvidia,ar0230";
                        		reg = <0x44>;
					reg_mux = <0>;
                        		sensor_model ="ar0230";
                        		avdd-reg = "vana";
                        		iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
				 		<&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
                        		clock-names = "extperiph1", "pllp_grtba";
                        		mclk = "extperiph1";
                        		clock-frequency = <24000000>;
					boot-gpios = <&tca9539_74 1 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca9539_74 0 GPIO_ACTIVE_HIGH>; 
					vana-supply= <&battery_reg>;
					vif-supply = <&battery_reg>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;
					sio-port = "B";
					deserializer-address = <0x48>;
					serializer-address_1 = <0x40>;
					serializer-address_2 = <0x41>;	
					/*PWM CHIP 0 with default period for 30Hz*/
					#pwm-cells = <1>;
					pwms = <&tegra_pwm8 0 33333333>;
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_b"
#include "tegra194-xavier-nx-cti-nilecam20_cunx_mode.dtsi"	

					ports {
   	    	               			#address-cells = <1>;
    	                   			#size-cells = <0>;
            	           			port@0 {
                               				reg = <0>;
                               				ecam_ar0230_out1: endpoint {
						 		vc-id = <0>;
                                       				port-index = <2>;
                                       				bus-width = <CAM_LANES>;
                                       				remote-endpoint = <&ecam_csi_in1>;
                               				};
                    	   			};
              		 		};
       				};
			};

            		i2c@1{
                		status = "okay";
                		reg = <1>;
                		i2c-mux,deselect-on-exit;
                		#address-cells = <1>;
                		#size-cells = <0>;
				ar0230_c@43 {
					status = "okay";
					compatible = "nvidia,ar0230";
					reg = <0x43>;
					sensor_model ="ar0230";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
							 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					boot-gpios = <&tca9539_74 3 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca9539_74 2 GPIO_ACTIVE_HIGH>; 
					vana-supply = <&battery_reg>;
					vif-supply = <&battery_reg>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;
					sio-port = "A";
					deserializer-address = <0x48>;
					serializer-address_1 = <0x40>;
					serializer-address_2 = <0x41>;	
					/*PWM CHIP 0 with default period for 30Hz*/
					#pwm-cells = <1>;
					pwms = <&tegra_pwm8 0 33333333>;
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_c"
#include "tegra194-xavier-nx-cti-nilecam20_cunx_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0230_out2: endpoint {
						 		vc-id = <1>;
								port-index = <0>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in2>;
							};
						};
					};
				};

               			ar0230_d@44 {
			        	status = "okay";
                        		compatible = "nvidia,ar0230";
                        		reg = <0x44>;
					reg_mux = <1>;
                        		sensor_model ="ar0230";
                        		avdd-reg = "vana";
                        		iovdd-reg = "vif";
					clocks = <&bpmp_clks  TEGRA194_CLK_EXTPERIPH1>,
				 		<&bpmp_clks TEGRA194_CLK_PLLP_OUT0>;
                        		clock-names = "extperiph1", "pllp_grtba";
                        		mclk = "extperiph1";
                        		clock-frequency = <24000000>;
					boot-gpios = <&tca9539_74 3 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca9539_74 2 GPIO_ACTIVE_HIGH>; 
					vana-supply = <&battery_reg>;
					vif-supply = <&battery_reg>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;
					sio-port = "B";
					deserializer-address = <0x48>;
					serializer-address_1 = <0x40>;
					serializer-address_2 = <0x41>;	
					/*PWM CHIP 0 with default period for 30Hz*/
					#pwm-cells = <1>;
					pwms = <&tegra_pwm8 0 33333333>;

#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_d"
#include "tegra194-xavier-nx-cti-nilecam20_cunx_mode.dtsi"
					ports {
   	    	               			#address-cells = <1>;
    	                   			#size-cells = <0>;
            	           			port@0 {
                               				reg = <0>;
                               				ecam_ar0230_out3: endpoint {
						 		vc-id = <0>;
                                       				port-index = <0>;
                                       				bus-width = <CAM_LANES>;
                                       				remote-endpoint = <&ecam_csi_in3>;
                               				};
                    	   			};
              		 		};
       				};
          		};
		};	
	};

	tegra-camera-platform {
		compatible = "nvidia, tegra-camera-platform";
		/**
		* Physical settings to calculate max ISO BW
		*
		* num_csi_lanes = <>;
		* Total number of CSI lanes when all cameras are active
		*
		* max_lane_speed = <>;
		* Max lane speed in Kbit/s
		*
		* min_bits_per_pixel = <>;
		* Min bits per pixel
		*
		* vi_peak_byte_per_pixel = <>;
		* Max byte per pixel for the VI ISO case
		*
		* vi_bw_margin_pct = <>;
		* Vi bandwidth margin in percentage
		*
		*/
		num_csi_lanes = <8>;
		max_lane_speed = <2500000>;
		min_bits_per_pixel = <16>;
		vi_peak_byte_per_pixel = <2>;
		vi_bw_margin_pct = <67>;

		modules {
			module0 {
				badge = "NileCAM20_CUNX-1";
				position = "centerleft";
				orientation = "0";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "NileCAM20_CUNX-1 ";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9544@70/i2c@0/ar0230_a@43";
					status = "okay";
				};
			};
			module1 {
				badge = "NileCAM20_CUNX-2";
				position = "bottomleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "NileCAM20_CUNX-2 ";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9544@70/i2c@0/ar0230_b@44";
					status = "okay";
				};
			};
			module2 {
				badge = "NileCAM20_CUNX-3";
				position = "topright";
				orientation = "2";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "NileCAM20_CUNX-3 ";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9544@70/i2c@1/ar0230_c@43";
					status = "okay";
				};
			};
			module3 {
				badge = "NileCAM20_CUNX-4";
				position = "bottomright";
				orientation = "3";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "NileCAM20_CUNX-4 ";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9544@70/i2c@1/ar0230_d@44";
					status = "okay";
				};
			};
		};
	};
};

